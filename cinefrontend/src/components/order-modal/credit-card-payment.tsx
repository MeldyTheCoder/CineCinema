import {
  Box,
  Button,
  chakra,
  Field,
  Flex,
  Grid,
  GridItem,
  Input,
  Text,
} from "@chakra-ui/react";
import { useForm } from "@tanstack/react-form";
import { useMemo, useState } from "react";
import { withMask } from "use-mask-input";
import { z } from "zod";
import { DarkMode, useColorMode, useColorModeValue } from "../ui/color-mode";

type CreditCardProps = {
  readonly number: string;
  readonly dateExpires: string;
  readonly cvv: string;
  readonly isFlipped: boolean;
};

type TCardForm = {
  number: string;
  dateExpires: string;
  cvv: string;
};

type CreditCardFormProps = {
  readonly totalPrice: number;
  readonly onSubmit?: (_: TCardForm) => void;
};

const CardContainer = chakra("div", {
  base: {
    marginTop: "1rem",
    maxW: { base: "100%", md: "60%" },
    display: "flex",
    flexDirection: { base: "column", xl: "row" },
    justifyContent: "center",
    alignItems: "center",
    gap: "2rem",
    paddingX: { base: "5px", md: "0" },
  },
});

export function CreditCard({
  number,
  dateExpires,
  cvv,
  isFlipped,
}: CreditCardProps) {
  const cardBg = useColorModeValue('gray.100', 'gray.950');
  const cardCvvBg = useColorModeValue('gray.400', 'gray.700');

  const formattedCardNumber = useMemo(() => {
    const cleaned = number.replace(/\D/g, "").slice(0, 16);

    const masked = Array.from({ length: 16 })
      .map((_, index) => cleaned[index] || "•")
      .join("");

    return [
      masked.slice(0, 4),
      masked.slice(4, 8),
      masked.slice(8, 12),
      masked.slice(12, 16),
    ].join(" ");
  }, [number]);

  const formattedExpiry = useMemo(() => {
    const cleaned = dateExpires.replace(/\D/g, "").slice(0, 4);

    const masked = Array.from({ length: 4 })
      .map((_, index) => cleaned[index] || "•")
      .join("");

    return `${masked.slice(0, 2)}/${masked.slice(2, 4)}`;
  }, [dateExpires]);

  const getPaymentSystemIcon = (cardNumber: string) => {
    switch (cardNumber.charAt(0)) {
      case "2":
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="79px"
            height="63px"
            viewBox="180 250 780 780"
          >
            <path
              fill="#4DB45E"
              d="M461.664 288.608v.096c-.096 0-30.336-.096-38.4 28.8-7.392 26.496-28.224 99.616-28.8 101.632h-5.76s-21.312-74.752-28.8-101.728c-8.064-28.896-38.4-28.8-38.4-28.8h-69.056v219.776h69.088V377.855h5.76l40.32 130.528h47.968l40.32-130.432h5.76v130.432h69.088V288.608h-69.088zM714.048 288.608s-20.256 1.824-29.76 23.041L635.36 419.136h-5.76V288.608h-69.088v219.776h65.248s21.216-1.92 30.721-23.04l47.968-107.488h5.76v130.528h69.088V288.608h-65.249zM810.016 388.416v119.968h69.088v-70.048h74.849c32.64 0 60.256-20.832 70.528-49.888H810.016v-.032z"
            />
            <linearGradient
              id="a"
              gradientUnits="userSpaceOnUse"
              x1="1065.561"
              y1="-978.524"
              x2="1779.66"
              y2="-978.524"
              gradientTransform="matrix(.32 0 0 .32 459.34 646.84)"
            >
              <stop offset=".3" stop-color="#00b4e6" />
              <stop offset="1" stop-color="#088ccb" />
            </linearGradient>
            <path
              fill="url(#a)"
              d="M953.984 288.608H800.32c7.68 41.856 39.071 75.424 79.647 86.368a110.449 110.449 0 0 0 28.896 3.841h118.432c1.056-4.992 1.536-10.08 1.536-15.36.001-41.345-33.503-74.849-74.847-74.849z"
            />
          </svg>
        );
      case "3":
        return (
          <svg
            width="79px"
            height="63px"
            viewBox="-75 75 780 780"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            fill="#000000"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="m575.61 145.11l-15.092 35.039h30.266l-15.174-35.039zm-174.15 21.713c2.845-1.422 4.52-4.515 4.52-8.356 0-3.764-1.76-6.49-4.604-7.771-2.591-1.42-6.577-1.584-10.399-1.584h-27v19.523h26.638c4.266 1e-3 7.831-0.059 10.845-1.812zm-345.97-21.713l-14.921 35.039h29.932l-15.011-35.039zm694.7 224.47h-42.344v-18.852h42.173c4.181 0 7.109-0.525 8.872-2.178 1.667-1.473 2.609-3.555 2.592-5.732 0-2.562-1.062-4.596-2.68-5.813-1.588-1.342-3.907-1.953-7.726-1.953-20.588-0.67-46.273 0.609-46.273-27.211 0-12.75 8.451-26.172 31.461-26.172h43.677v-17.492h-40.58c-12.246 0-21.144 2.81-27.443 7.181v-7.181h-60.022c-9.597 0-20.863 2.279-26.191 7.181v-7.181h-107.19v7.181c-8.529-5.897-22.925-7.181-29.565-7.181h-70.702v7.181c-6.747-6.262-21.758-7.181-30.902-7.181h-79.127l-18.104 18.775-16.959-18.775h-118.2v122.68h115.97l18.655-19.076 17.575 19.076 71.484 0.06v-28.859h7.03c9.484 0.146 20.67-0.223 30.542-4.311v33.106h58.962v-31.976h2.844c3.628 0 3.988 0.146 3.988 3.621v28.348h179.12c11.372 0 23.26-2.786 29.841-7.853v7.853h56.817c11.822 0 23.369-1.588 32.154-5.653v-22.853c-5.324 7.462-15.707 11.245-29.751 11.245zm-363.58-28.967h-27.36v29.488h-42.618l-27-29.102-28.058 29.102h-86.854v-87.914h88.19l26.976 28.818 27.89-28.818h70.064c17.401 0 36.952 4.617 36.952 28.963 0 24.422-19.016 29.463-38.182 29.463zm131.56-3.986c3.097 4.291 3.544 8.297 3.634 16.047v17.428h-22.016v-10.998c0-5.289 0.533-13.121-3.544-17.209-3.2-3.148-8.086-3.9-16.088-3.9h-23.432v32.107h-22.031v-87.914h50.62c11.105 0 19.188 0.473 26.384 4.148 6.92 4.006 11.275 9.494 11.275 19.523-2e-3 14.031-9.769 21.189-15.541 23.389 4.878 1.725 8.866 4.818 10.739 7.379zm90.575-36.258h-51.346v15.982h50.091v17.938h-50.091v17.492l51.346 0.078v18.242h-73.182v-87.914h73.182v18.182zm56.344 69.731h-42.705v-18.852h42.535c4.16 0 7.109-0.527 8.957-2.178 1.507-1.359 2.591-3.336 2.591-5.73 0-2.564-1.174-4.598-2.676-5.818-1.678-1.34-3.993-1.947-7.809-1.947-20.506-0.674-46.186 0.605-46.186-27.213 0-12.752 8.363-26.174 31.35-26.174h43.96v18.709h-40.225c-3.987 0-6.579 0.146-8.783 1.592-2.405 1.424-3.295 3.535-3.295 6.322 0 3.316 2.04 5.574 4.797 6.549 2.314 0.771 4.797 0.996 8.533 0.996l11.805 0.309c11.899 0.273 20.073 2.25 25.04 7.068 4.266 4.232 6.559 9.578 6.559 18.625-2e-3 18.913-12.335 27.742-34.448 27.742zm-170.06-68.313c-2.649-1.508-6.559-1.588-10.461-1.588h-27.001v19.744h26.64c4.265 0 7.892-0.145 10.822-1.812 2.842-1.646 4.543-4.678 4.543-8.438s-1.701-6.482-4.543-7.906zm244.99-1.59c-3.988 0-6.641 0.145-8.873 1.588-2.314 1.426-3.202 3.537-3.202 6.326 0 3.314 1.953 5.572 4.794 6.549 2.315 0.771 4.796 0.996 8.448 0.996l11.887 0.303c11.99 0.285 19.998 2.262 24.879 7.08 0.889 0.668 1.423 1.42 2.034 2.174v-25.014h-39.965l-2e-3 -2e-3zm-352.65 0h-28.59v22.391h28.336c8.424 0 13.663-4.006 13.667-11.611-4e-3 -7.688-5.497-10.78-13.413-10.78zm-190.81 0v15.984h48.136v17.938h-48.136v17.49h53.909l25.047-25.791-23.983-25.621h-54.973zm140.77 61.479v-70.482l-33.664 34.674 33.664 35.808zm-138.93-141.15v15.148h183.19l-0.085-32.046h3.545c2.483 0.083 3.205 0.302 3.205 4.229v27.818h94.748v-7.461c7.642 3.924 19.527 7.461 35.168 7.461h39.86l8.531-19.522h18.913l8.342 19.522h76.811v-18.544l11.629 18.543h61.555v-122.58h-60.915v14.477l-8.53-14.477h-62.507v14.477l-7.833-14.477h-84.434c-14.135 0-26.555 1.89-36.591 7.158v-7.158h-58.268v7.158c-6.387-5.43-15.089-7.158-24.762-7.158h-212.87l-14.282 31.662-14.668-31.662h-67.047v14.477l-7.367-14.477h-57.18l-26.553 58.284v46.621l39.264-87.894h32.579l37.29 83.217v-83.217h35.789l28.695 59.625 26.362-59.625h36.507v87.894h-22.475l-0.082-68.837-31.796 68.837h-19.252l-31.877-68.898v68.898h-44.6l-8.425-19.605h-45.654l-8.512 19.605h-23.814v17.682h37.466l8.447-19.523h18.914l8.425 19.523h73.713v-14.927l6.579 14.989h38.266l6.58-15.214zm288.67-80.176c7.085-7.015 18.188-10.25 33.298-10.25h21.227v18.833h-20.782c-7.998 0-12.521 1.14-16.871 5.208-3.74 3.7-6.304 10.696-6.304 19.908 0 9.417 1.955 16.206 6.028 20.641 3.376 3.478 9.513 4.533 15.283 4.533h9.851l30.902-69.12h32.853l37.124 83.134v-83.133h33.386l38.543 61.213v-61.213h22.46v87.891h-31.072l-41.562-65.968v65.968h-44.656l-8.532-19.605h-45.55l-8.278 19.605h-25.66c-10.657 0-24.151-2.258-31.793-9.722-7.707-7.462-11.713-17.571-11.713-33.553-4e-3 -13.037 2.389-24.953 11.818-34.37zm-45.101-10.249h22.372v87.894h-22.372v-87.894zm-100.87 0h50.432c11.203 0 19.464 0.285 26.553 4.21 6.936 3.926 11.095 9.658 11.095 19.46 0 14.015-9.763 21.254-15.448 23.429 4.796 1.75 8.896 4.841 10.849 7.401 3.096 4.372 3.629 8.277 3.629 16.126v17.267h-22.115l-0.083-11.084c0-5.29 0.528-12.896-3.461-17.122-3.203-3.09-8.088-3.763-15.983-3.763h-23.538v31.97h-21.927l-3e-3 -87.894zm-88.393 0h73.249v18.303h-51.32v15.843h50.088v18.017h-50.088v17.553h51.32v18.177h-73.249v-87.893z"
                fill="#2557D6"
              ></path>
            </g>
          </svg>
        );
      case "4":
        return (
          <svg
            width="79px"
            height="63px"
            viewBox="-75 75 780 780"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            fill="#000000"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="m293.2 348.73l33.359-195.76h53.358l-33.384 195.76h-53.333zm246.11-191.54c-10.569-3.966-27.135-8.222-47.821-8.222-52.726 0-89.863 26.551-90.181 64.604-0.297 28.129 26.515 43.822 46.754 53.185 20.771 9.598 27.752 15.716 27.652 24.283-0.133 13.123-16.586 19.115-31.924 19.115-21.355 0-32.701-2.967-50.225-10.273l-6.878-3.111-7.487 43.822c12.463 5.467 35.508 10.199 59.438 10.445 56.09 0 92.502-26.248 92.916-66.885 0.199-22.27-14.016-39.215-44.801-53.188-18.65-9.056-30.072-15.099-29.951-24.269 0-8.137 9.668-16.838 30.56-16.838 17.446-0.271 30.088 3.534 39.936 7.5l4.781 2.259 7.231-42.427m137.31-4.223h-41.23c-12.772 0-22.332 3.486-27.94 16.234l-79.245 179.4h56.031s9.159-24.121 11.231-29.418c6.123 0 60.555 0.084 68.336 0.084 1.596 6.854 6.492 29.334 6.492 29.334h49.512l-43.187-195.64zm-65.417 126.41c4.414-11.279 21.26-54.724 21.26-54.724-0.314 0.521 4.381-11.334 7.074-18.684l3.606 16.878s10.217 46.729 12.353 56.527h-44.293v3e-3zm-363.3-126.41l-52.239 133.5-5.565-27.129c-9.726-31.274-40.025-65.157-73.898-82.12l47.767 171.2 56.455-0.063 84.004-195.39-56.524-1e-3"
                fill="#0E4595"
              ></path>
              <path
                d="m146.92 152.96h-86.041l-0.682 4.073c66.939 16.204 111.23 55.363 129.62 102.42l-18.709-89.96c-3.229-12.396-12.597-16.096-24.186-16.528"
                fill="#F2AE14"
              ></path>
            </g>
          </svg>
        );
      case "5":
        return (
          <svg
            width="79px"
            height="63px"
            viewBox="-75 75 780 780"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            fill="#000000"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="m449.01 250c0 99.143-80.371 179.5-179.51 179.5s-179.5-80.361-179.5-179.5c0-99.133 80.362-179.5 179.5-179.5 99.137 0 179.51 80.371 179.51 179.5"
                fill="#D9222A"
              ></path>
              <path
                d="m510.49 70.496c-46.379 0-88.643 17.596-120.5 46.467-6.49 5.889-12.548 12.237-18.125 18.996h36.267c4.965 6.037 9.536 12.387 13.685 19.012h-63.635c-3.827 6.122-7.281 12.469-10.342 19.008h84.313c2.894 6.185 5.431 12.53 7.601 19.004h-99.513c-2.09 6.234-3.832 12.58-5.217 19.008h109.94c2.689 12.49 4.045 25.231 4.042 38.008 0 19.935-3.254 39.112-9.254 57.021h-99.513c2.164 6.477 4.7 12.824 7.596 19.008h84.316c-3.063 6.541-6.519 12.889-10.347 19.013h-63.625c4.147 6.62 8.719 12.966 13.685 18.996h36.259c-5.57 6.772-11.63 13.127-18.13 19.013 31.857 28.866 74.117 46.454 120.5 46.454 99.139 0 179.51-80.361 179.51-179.5 0-99.129-80.371-179.5-179.51-179.5"
                fill="#EE9F2D"
              ></path>
              <path d="m666.07 350.06c0-3.199 2.592-5.801 5.796-5.801s5.796 2.602 5.796 5.801-2.592 5.801-5.796 5.801-5.796-2.602-5.796-5.801zm5.796 4.408c2.434-1e-3 4.407-1.974 4.408-4.408 0-2.432-1.971-4.402-4.402-4.404h-6e-3c-2.429-3e-3 -4.4 1.963-4.404 4.391v0.014c-2e-3 2.433 1.968 4.406 4.4 4.408 1e-3 -1e-3 3e-3 -1e-3 4e-3 -1e-3zm-0.783-1.86h-1.187v-5.096h2.149c0.45 0 0.908 0 1.305 0.254 0.413 0.279 0.646 0.771 0.646 1.279 0 0.571-0.338 1.104-0.884 1.312l0.938 2.25h-1.315l-0.779-2.017h-0.871l-2e-3 2.018zm0-2.89h0.658c0.246 0 0.505 0.021 0.726-0.1 0.195-0.125 0.296-0.359 0.296-0.584-5e-3 -0.209-0.112-0.402-0.288-0.518-0.207-0.129-0.536-0.101-0.758-0.101h-0.634v1.303zm-443.5-80.063c-2.046-0.238-2.945-0.301-4.35-0.301-11.046 0-16.638 3.787-16.638 11.268 0 4.611 2.729 7.545 6.987 7.545 7.939 0 13.659-7.559 14.001-18.512zm14.171 32.996h-16.146l0.371-7.676c-4.926 6.065-11.496 8.949-20.426 8.949-10.563 0-17.804-8.25-17.804-20.229 0-18.024 12.596-28.541 34.217-28.541 2.208 0 5.042 0.199 7.941 0.57 0.604-2.441 0.763-3.488 0.763-4.801 0-4.908-3.396-6.737-12.5-6.737-9.533-0.108-17.396 2.271-20.625 3.333 0.204-1.229 2.7-16.659 2.7-16.659 9.712-2.846 16.116-3.917 23.325-3.917 16.732 0 25.596 7.513 25.579 21.712 0.033 3.805-0.597 8.5-1.579 14.671-1.691 10.734-5.32 33.721-5.816 39.325zm-62.158 0h-19.487l11.162-69.997-24.925 69.997h-13.279l-1.642-69.597-11.733 69.597h-18.242l15.237-91.056h28.021l1.7 50.968 17.092-50.968h31.167l-15.071 91.056m354.97-32.996c-2.037-0.238-2.941-0.301-4.342-0.301-11.041 0-16.634 3.787-16.634 11.268 0 4.611 2.726 7.545 6.983 7.545 7.94 0 13.664-7.559 13.993-18.512zm14.184 32.996h-16.146l0.366-7.676c-4.926 6.065-11.5 8.949-20.422 8.949-10.565 0-17.8-8.25-17.8-20.229 0-18.024 12.588-28.541 34.213-28.541 2.208 0 5.037 0.199 7.934 0.57 0.604-2.441 0.763-3.488 0.763-4.801 0-4.908-3.392-6.737-12.496-6.737-9.533-0.108-17.387 2.271-20.629 3.333 0.204-1.229 2.709-16.659 2.709-16.659 9.712-2.846 16.112-3.917 23.313-3.917 16.74 0 25.604 7.513 25.587 21.712 0.032 3.805-0.597 8.5-1.579 14.671-1.684 10.734-5.321 33.721-5.813 39.325zm-220.39-1.125c-5.333 1.679-9.491 2.398-14 2.398-9.962 0-15.399-5.725-15.399-16.267-0.142-3.271 1.433-11.88 2.671-19.737 1.125-6.917 8.449-50.529 8.449-50.529h19.371l-2.263 11.208h11.699l-2.642 17.796h-11.742c-2.25 14.083-5.454 31.625-5.491 33.95 0 3.816 2.037 5.483 6.671 5.483 2.221 0 3.94-0.227 5.254-0.7l-2.578 16.398m59.392-0.6c-6.654 2.034-13.075 3.017-19.879 3-21.684-0.021-32.987-11.346-32.987-33.032 0-25.313 14.38-43.947 33.899-43.947 15.971 0 26.171 10.433 26.171 26.796 0 5.429-0.7 10.729-2.388 18.212h-38.574c-1.305 10.741 5.57 15.217 16.837 15.217 6.935 0 13.188-1.429 20.142-4.663l-3.221 18.417zm-10.888-43.9c0.107-1.543 2.055-13.217-9.013-13.217-6.171 0-10.583 4.704-12.38 13.217h21.393zm-123.42-5.017c0 9.367 4.542 15.826 14.842 20.676 7.892 3.709 9.112 4.81 9.112 8.17 0 4.617-3.479 6.701-11.191 6.701-5.813 0-11.221-0.908-17.458-2.922 0 0-2.563 16.321-2.68 17.102 4.43 0.967 8.38 1.861 20.279 2.19 20.563 0 30.059-7.829 30.059-24.75 0-10.175-3.976-16.146-13.737-20.634-8.171-3.75-9.108-4.587-9.108-8.045 0-4.004 3.237-6.046 9.537-6.046 3.825 0 9.05 0.408 14 1.112l2.775-17.175c-5.046-0.8-12.696-1.442-17.15-1.442-21.801 1e-3 -29.347 11.388-29.28 25.063m229.09-23.116c5.412 0 10.458 1.421 17.412 4.921l3.188-19.763c-2.854-1.121-12.904-7.7-21.417-7.7-13.041 0-24.065 6.471-31.82 17.15-11.309-3.746-15.958 3.825-21.657 11.367l-5.063 1.179c0.383-2.483 0.729-4.95 0.612-7.446h-17.896c-2.445 22.917-6.778 46.128-10.171 69.075l-0.884 4.976h19.496c3.254-21.143 5.037-34.68 6.121-43.842l7.341-4.084c1.097-4.078 4.529-5.458 11.417-5.291-0.926 5.008-1.389 10.091-1.383 15.184 0 24.225 13.07 39.308 34.05 39.308 5.404 0 10.041-0.712 17.221-2.658l3.43-20.759c-6.458 3.181-11.759 4.677-16.559 4.677-11.329 0-18.184-8.363-18.184-22.185 0-20.051 10.196-34.109 24.746-34.109"></path>
              <path
                d="m185.21 297.24h-19.491l11.171-69.988-24.926 69.988h-13.283l-1.642-69.588-11.733 69.588h-18.241l15.237-91.042h28.021l0.788 56.362 18.904-56.362h30.267l-15.072 91.042"
                fill="#ffffff"
              ></path>
              <path d="m647.52 211.6l-4.321 26.309c-5.329-7.013-11.054-12.088-18.612-12.088-9.833 0-18.783 7.455-24.642 18.425-8.158-1.692-16.597-4.563-16.597-4.563l-4e-3 0.067c0.658-6.134 0.921-9.875 0.862-11.146h-17.9c-2.438 22.917-6.771 46.128-10.157 69.075l-0.893 4.976h19.492c2.633-17.096 4.648-31.291 6.133-42.551 6.658-6.016 9.992-11.266 16.721-10.916-2.979 7.205-4.725 15.503-4.725 24.017 0 18.513 9.366 30.725 23.533 30.725 7.142 0 12.621-2.462 17.967-8.171l-0.913 6.884h18.435l14.842-91.042-19.221-1e-3zm-24.371 73.941c-6.634 0-9.983-4.908-9.983-14.596 0-14.555 6.271-24.875 15.112-24.875 6.695 0 10.32 5.104 10.32 14.509 1e-3 14.679-6.37 24.962-15.449 24.962z"></path>
              <path
                d="m233.19 264.26c-2.042-0.236-2.946-0.299-4.346-0.299-11.046 0-16.634 3.787-16.634 11.266 0 4.604 2.729 7.547 6.979 7.547 7.947-1e-3 13.668-7.559 14.001-18.514zm14.178 32.984h-16.146l0.367-7.663c-4.921 6.054-11.5 8.95-20.421 8.95-10.567 0-17.805-8.25-17.805-20.229 0-18.032 12.592-28.542 34.217-28.542 2.208 0 5.042 0.2 7.938 0.571 0.604-2.441 0.763-3.487 0.763-4.808 0-4.909-3.392-6.729-12.496-6.729-9.537-0.108-17.396 2.271-20.629 3.321 0.204-1.225 2.7-16.637 2.7-16.637 9.708-2.858 16.12-3.929 23.32-3.929 16.737 0 25.604 7.517 25.588 21.704 0.029 3.821-0.604 8.513-1.584 14.675-1.687 10.724-5.319 33.724-5.812 39.316zm261.38-88.592l-3.191 19.767c-6.95-3.496-12-4.92-17.407-4.92-14.551 0-24.75 14.058-24.75 34.106 0 13.821 6.857 22.181 18.184 22.181 4.8 0 10.096-1.492 16.554-4.675l-3.421 20.75c-7.184 1.957-11.816 2.67-17.225 2.67-20.977 0-34.051-15.084-34.051-39.309 0-32.55 18.059-55.3 43.888-55.3 8.507 1e-3 18.561 3.609 21.419 4.73m31.443 55.608c-2.041-0.236-2.941-0.299-4.347-0.299-11.041 0-16.633 3.787-16.633 11.266 0 4.604 2.729 7.547 6.983 7.547 7.938-1e-3 13.663-7.559 13.997-18.514zm14.178 32.984h-16.15l0.371-7.663c-4.925 6.054-11.5 8.95-20.421 8.95-10.563 0-17.804-8.25-17.804-20.229 0-18.032 12.596-28.542 34.212-28.542 2.213 0 5.042 0.2 7.941 0.571 0.601-2.441 0.763-3.487 0.763-4.808 0-4.909-3.393-6.729-12.495-6.729-9.533-0.108-17.396 2.271-20.63 3.321 0.204-1.225 2.704-16.637 2.704-16.637 9.709-2.858 16.116-3.929 23.316-3.929 16.741 0 25.604 7.517 25.583 21.704 0.033 3.821-0.596 8.513-1.579 14.675-1.682 10.724-5.323 33.724-5.811 39.316zm-220.39-1.121c-5.338 1.679-9.496 2.408-14 2.408-9.962 0-15.399-5.726-15.399-16.268-0.138-3.279 1.438-11.88 2.675-19.736 1.12-6.926 8.445-50.534 8.445-50.534h19.368l-2.26 11.212h9.941l-2.646 17.788h-9.975c-2.25 14.092-5.463 31.62-5.496 33.95 0 3.83 2.041 5.482 6.671 5.482 2.221 0 3.938-0.216 5.254-0.691l-2.578 16.389m59.391-0.592c-6.65 2.033-13.079 3.012-19.879 3-21.685-0.021-32.987-11.346-32.987-33.033 0-25.321 14.379-43.95 33.899-43.95 15.971 0 26.171 10.429 26.171 26.8 0 5.434-0.7 10.733-2.384 18.212h-38.574c-1.306 10.741 5.569 15.222 16.837 15.222 6.93 0 13.188-1.435 20.138-4.677l-3.221 18.426zm-10.891-43.912c0.116-1.538 2.06-13.217-9.013-13.217-6.167 0-10.579 4.717-12.375 13.217h21.388zm-123.42-5.005c0 9.367 4.542 15.818 14.842 20.675 7.892 3.709 9.112 4.812 9.112 8.172 0 4.616-3.483 6.699-11.188 6.699-5.816 0-11.225-0.908-17.467-2.921 0 0-2.554 16.321-2.671 17.101 4.421 0.967 8.375 1.85 20.275 2.191 20.566 0 30.059-7.829 30.059-24.746 0-10.18-3.971-16.15-13.737-20.637-8.167-3.759-9.113-4.584-9.113-8.046 0-4 3.246-6.059 9.542-6.059 3.821 0 9.046 0.421 14.004 1.125l2.771-17.179c-5.042-0.8-12.692-1.441-17.146-1.441-21.804 0-29.346 11.379-29.283 25.066m398.45 50.63h-18.438l0.917-6.893c-5.347 5.717-10.825 8.18-17.968 8.18-14.166 0-23.528-12.213-23.528-30.726 0-24.63 14.521-45.392 31.708-45.392 7.559 0 13.279 3.087 18.604 10.096l4.325-26.308h19.221l-14.841 91.043zm-28.746-17.109c9.075 0 15.45-10.283 15.45-24.953 0-9.405-3.629-14.509-10.325-14.509-8.837 0-15.115 10.315-15.115 24.875-1e-3 9.686 3.357 14.587 9.99 14.587zm-56.842-56.929c-2.441 22.917-6.773 46.13-10.162 69.063l-0.892 4.976h19.491c6.972-45.275 8.658-54.117 19.588-53.009 1.742-9.267 4.982-17.383 7.399-21.479-8.163-1.7-12.721 2.913-18.688 11.675 0.471-3.788 1.333-7.467 1.162-11.225l-17.898-1e-3m-160.42 0c-2.446 22.917-6.779 46.13-10.167 69.063l-0.888 4.976h19.5c6.963-45.275 8.646-54.117 19.57-53.009 1.75-9.267 4.991-17.383 7.399-21.479-8.154-1.7-12.717 2.913-18.679 11.675 0.471-3.788 1.324-7.467 1.162-11.225l-17.897-1e-3m254.57 68.241c-4e-3 -3.199 2.586-5.795 5.784-5.799h0.012c3.197-4e-3 5.793 2.586 5.796 5.783v0.016c-1e-3 3.201-2.595 5.795-5.796 5.797-3.201-2e-3 -5.795-2.596-5.796-5.797zm5.796 4.405c2.431 2e-3 4.402-1.969 4.403-4.399v-4e-3c3e-3 -2.433-1.968-4.406-4.399-4.408h-4e-3c-2.435 1e-3 -4.407 1.974-4.408 4.408 2e-3 2.432 1.975 4.403 4.408 4.403zm-0.784-1.871h-1.188v-5.082h2.153c0.446 0 0.909 9e-3 1.296 0.254 0.417 0.283 0.654 0.767 0.654 1.274 0 0.575-0.337 1.112-0.888 1.317l0.941 2.236h-1.32l-0.779-2.009h-0.87l1e-3 2.01zm0-2.879h0.653c0.246 0 0.513 0.019 0.729-0.1 0.196-0.125 0.296-0.361 0.296-0.588-9e-3 -0.21-0.114-0.404-0.287-0.523-0.204-0.117-0.542-0.084-0.763-0.084h-0.629l1e-3 1.295z"
                fill="#ffffff"
              ></path>
            </g>
          </svg>
        );
      case "6":
        return (
          <svg
            width="79px"
            height="63px"
            viewBox="-75 75 780 780"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            fill="#000000"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="m690 250.01c0 99.133-80.351 179.5-179.48 179.5-99.12 0-179.48-80.361-179.48-179.5 0-99.142 80.358-179.51 179.48-179.51 99.133 0 179.48 80.367 179.48 179.51"
                fill="#D9222A"
              ></path>
              <path
                d="m371.87 363.99c-4.97-6.029-9.538-12.38-13.675-19.01h63.611c3.829-6.122 7.282-12.472 10.343-19.013h-84.292c-2.894-6.183-5.43-12.526-7.597-19h99.477c5.986-17.903 9.229-37.05 9.229-56.962 0-13.046-1.392-25.763-4.028-38.013h-109.86c1.385-6.427 3.123-12.773 5.209-19.008h99.44c-2.171-6.472-4.706-12.817-7.592-19.004h-84.254c3.063-6.537 6.516-12.884 10.337-19.009h63.571c-4.144-6.618-8.71-12.962-13.671-18.991h-36.224c5.569-6.763 11.623-13.113 18.112-19-31.854-28.884-74.138-46.483-120.52-46.483-99.126 1e-3 -179.48 80.368-179.48 179.51 0 99.133 80.358 179.5 179.49 179.5 46.388 0 88.667-17.596 120.52-46.475 6.499-5.896 12.56-12.26 18.133-19.037h-36.267"
                fill="#0097D0"
              ></path>
              <path d="m666.07 350.04c0-3.2 2.596-5.796 5.801-5.796 3.199 2e-3 5.792 2.596 5.791 5.796 0 3.204-2.592 5.8-5.791 5.8-3.203 1e-3 -5.801-2.596-5.801-5.8v0zm5.801 4.408c2.43 1e-3 4.401-1.968 4.403-4.397v-0.011c0-2.427-1.967-4.396-4.395-4.396h-9e-3c-2.43-6e-3 -4.404 1.961-4.409 4.391v5e-3c-1e-3 2.434 1.971 4.407 4.404 4.408h6e-3zm-0.788-1.862h-1.184v-5.092h2.149c0.446 0 0.904 4e-3 1.3 0.258 0.417 0.283 0.646 0.775 0.646 1.271 0 0.582-0.338 1.111-0.88 1.315l0.934 2.246h-1.315l-0.775-2.009h-0.875v2.011zm0-2.879h0.658c0.246 0 0.505 0.016 0.726-0.102 0.191-0.136 0.304-0.357 0.301-0.592-0.01-0.207-0.116-0.397-0.288-0.513-0.212-0.125-0.541-0.101-0.763-0.101h-0.634v1.308zm-283.64-51.205c-7.671 2.033-15.088 3.025-22.93 3.01-25.017-0.024-38.046-11.418-38.046-33.201 0-25.458 16.587-44.183 39.101-44.183 18.417 0 30.175 10.5 30.175 26.946 0 5.458-0.796 10.771-2.745 18.296h-44.488c-1.583 10.633 6.188 15.306 19.413 15.306 7.925 0 15.092-1.427 23.024-4.613l-3.504 18.439zm-11.963-44.151c0-1.607 2.476-13.033-10.399-13.283-7.108 0-12.208 4.725-14.271 13.283h24.67zm27.034-4.99c0 9.404 5.296 15.9 17.329 20.736 9.199 3.771 10.649 4.859 10.649 8.222 0 4.663-4.066 6.805-13.092 6.745-6.778-0.049-12.962-0.87-20.263-2.896l-3.229 17.154c6.487 1.504 15.588 2 23.649 2.188 24.024 0 35.116-7.867 35.116-24.867 0-10.217-4.625-16.233-16.033-20.713-9.537-3.809-10.657-4.638-10.657-8.083 0-4.05 3.778-6.1 11.148-6.1 4.463 0 10.579 0.413 16.38 1.108l3.259-17.242c-5.912-0.825-14.884-1.483-20.075-1.483-25.448 1e-3 -34.256 11.46-34.181 25.231m-88.242 50.92h-18.662l0.445-7.82c-5.691 6.17-13.271 9.041-23.558 9.041-12.175 0-20.517-8.324-20.517-20.295 0-18.195 14.5-28.691 39.429-28.691 2.563 0 5.821 0.191 9.167 0.562 0.691-2.434 0.879-3.479 0.879-4.808 0-4.979-3.921-6.813-14.412-6.813-10.342 0.042-17.321 1.571-23.796 3.313l3.188-16.7c11.195-2.846 18.529-3.941 26.825-3.941 19.304 0 29.499 7.566 29.499 21.796 0.167 3.795-1.158 11.413-1.82 14.746-0.759 4.852-6.109 32.973-6.667 39.61zm-16.379-33.191c-2.366-0.242-3.396-0.312-5.013-0.312-12.729 0-19.183 3.787-19.183 11.267 0 4.692 3.149 7.634 8.058 7.634 9.147-1e-3 15.75-7.652 16.138-18.589zm194.11 32.011c-6.125 1.68-10.896 2.408-16.059 2.408-11.435 0-17.676-5.842-17.676-16.25-0.357-2.857 2.435-16.059 3.066-19.736 0.634-3.691 10.538-57.492 10.538-57.492h22.212l-3.362 17.8h11.393l-3.097 18.171h-11.44s-6.279 31.529-6.279 33.934c0 3.824 2.316 5.487 7.633 5.487 2.546 0 4.51-0.237 6.029-0.692l-2.958 16.37m99.246-74.974c-16.279 0-29 6.7-36.388 17.892l6.412-16.596c-11.816-4.337-19.435 1.85-26.325 10.65 0 0-1.154 1.462-2.3 2.8v-13.05h-20.858c-2.825 23.029-7.82 46.379-11.729 69.446l-0.941 5.021h22.438c2.125-11.708 3.875-21.213 5.617-28.788 4.768-20.787 12.787-27.141 24.829-24.333-2.779 5.979-4.305 12.892-4.305 20.554 0 18.58 10.092 33.789 35.149 33.789 25.287 0 43.597-13.51 43.597-44.31 0-18.579-12.201-33.075-35.196-33.075zm-6.529 59.316c-7.926 0.125-12.729-6.524-12.729-16.471 0-11.791 7.013-25.112 18.274-25.112 9.087 0 12.199 7.204 12.199 14.879 1e-3 16.78-6.874 26.704-17.744 26.704zm-343.19 16.847h-22.342l13.279-69.954-30.571 69.954h-20.366l-3.726-69.55-13.32 69.55h-20.271l17.267-90.996h34.913l2.912 50.726 22.117-50.726h37.721l-17.613 90.996"></path>
              <path
                d="m628.15 288.88c2e-3 -3.199 2.596-5.793 5.796-5.795 3.204 0 5.796 2.6 5.796 5.795 0.06 3.201-2.487 5.845-5.688 5.904-3.201 0.061-5.845-2.486-5.904-5.688-2e-3 -0.072-2e-3 -0.144 0-0.216zm5.796 4.413c2.435-3e-3 4.408-1.978 4.408-4.413 0-2.433-1.976-4.402-4.408-4.402-2.434 0-4.408 1.971-4.408 4.402 0 2.435 1.973 4.41 4.408 4.413zm-0.784-1.866h-1.188v-5.084h2.15c0.449 0 0.908 0 1.304 0.25 0.408 0.279 0.646 0.769 0.646 1.271 0 0.578-0.337 1.115-0.883 1.316l0.934 2.246h-1.316l-0.771-2.01h-0.875v2.011h-1e-3zm0-2.888h0.658c0.242 0 0.504 0.017 0.725-0.097 0.19-0.135 0.301-0.354 0.296-0.588-5e-3 -0.206-0.11-0.397-0.283-0.512-0.212-0.13-0.541-0.097-0.763-0.097h-0.633v1.294zm-240.11 4.354c-7.667 2.033-15.088 3.028-22.925 3.012-25.017-0.025-38.046-11.42-38.046-33.208 0-25.45 16.579-44.179 39.096-44.179 18.421 0 30.175 10.496 30.175 26.942 0 5.467-0.8 10.771-2.74 18.301h-44.487c-1.584 10.629 6.179 15.308 19.408 15.308 7.925 0 15.087-1.425 23.028-4.616l-3.509 18.44zm-11.963-44.15c0-1.604 2.472-13.033-10.398-13.279-7.108 0-12.204 4.729-14.271 13.279h24.669zm27.038-4.996c0 9.408 5.287 15.9 17.325 20.746 9.204 3.768 10.648 4.857 10.648 8.213 0 4.666-4.065 6.809-13.087 6.75-6.783-0.047-12.967-0.871-20.263-2.896l-3.237 17.146c6.491 1.516 15.597 2.012 23.653 2.199 24.025 0 35.121-7.871 35.121-24.871 0-10.217-4.629-16.236-16.041-20.712-9.538-3.809-10.654-4.638-10.654-8.083 0-4.05 3.783-6.1 11.146-6.1 4.471 0 10.583 0.417 16.388 1.113l3.25-17.246c-5.913-0.825-14.879-1.483-20.065-1.483-25.459-1e-3 -34.263 11.453-34.184 25.224m-88.242 50.93h-18.666l0.45-7.82c-5.696 6.158-13.275 9.033-23.559 9.033-12.175 0-20.521-8.326-20.521-20.287 0-18.205 14.495-28.696 39.429-28.696 2.563 0 5.816 0.192 9.171 0.563 0.691-2.433 0.875-3.475 0.875-4.808 0-4.983-3.917-6.813-14.408-6.813-10.342 0.042-17.321 1.575-23.796 3.313l3.184-16.696c11.199-2.85 18.529-3.946 26.829-3.946 19.304 0 29.495 7.567 29.495 21.792 0.167 3.8-1.158 11.413-1.816 14.754-0.763 4.848-6.112 32.968-6.667 39.611zm-16.387-33.198c-2.358-0.244-3.392-0.312-5.013-0.312-12.721 0-19.18 3.788-19.18 11.268 0 4.694 3.154 7.633 8.055 7.633 9.155-1e-3 15.758-7.654 16.138-18.589zm194.11 32.018c-6.12 1.676-10.896 2.408-16.055 2.408-11.434 0-17.671-5.846-17.671-16.254-0.361-2.854 2.435-16.059 3.063-19.737 0.634-3.692 10.537-57.492 10.537-57.492h22.209l-3.354 17.8h11.393l-3.097 18.171h-11.44s-6.283 31.53-6.283 33.933c0 3.825 2.32 5.479 7.633 5.479 2.542 0 4.509-0.229 6.029-0.691l-2.964 16.383m110.47-42.367c0 16.775-6.88 26.709-17.755 26.709-7.921 0.112-12.726-6.525-12.726-16.475 0-11.792 7.009-25.113 18.271-25.113 9.093 0 12.21 7.213 12.21 14.879zm23.979 0.467c0-18.579-12.208-33.079-35.194-33.079-26.45 0-43.551 17.625-43.551 43.596 0 18.578 10.084 33.791 35.149 33.791 25.288 0 43.596-13.512 43.596-44.308zm-114.66-31.383c-2.821 23.029-7.816 46.375-11.722 69.45l-0.946 5.021h22.435c8.088-44.558 10.8-57.253 27.741-52.782l8.149-21.087c-11.815-4.337-19.425 1.854-26.309 10.658 0.621-3.962 1.792-7.783 1.509-11.258l-20.857-2e-3m-270.26 74.47h-22.338l13.275-69.958-30.575 69.958h-20.362l-3.726-69.555-13.32 69.555h-20.271l17.263-91h34.921l1.846 56.334 24.575-56.334h36.325l-17.613 91"
                fill="#ffffff"
              ></path>
            </g>
          </svg>
        );
    }
  };

  return (
    <Box
      perspective="1000px"
      width={{ base: "100%", sm: "400px" }}
      position="relative"
    >
      <Box
        transform={isFlipped ? "rotateY(180deg)" : "rotateY(0)"}
        transition="transform 0.6s cubic-bezier(0.4, 0, 0.2, 1)"
        transformStyle="preserve-3d"
        width="100%"
        height={{ base: "220px", md: "240px" }}
      >
        <Flex
          position="absolute"
          width="100%"
          height="100%"
          backfaceVisibility="hidden"
          borderRadius="15px"
          p={4}
          bg={cardBg}
          direction="column"
          justify="space-between"
          bgGradient="linear(45deg, blue.600, blue.400)"
          boxShadow={{md: "lg", base: 'md'}}
        >
          <Flex justify="space-between" align="start">
            <Text fontSize="xl">{formattedCardNumber}</Text>
            {getPaymentSystemIcon(number)}
          </Flex>
          <Flex justify="space-between">
            <Text>CARD HOLDER</Text>
            <Text>{formattedExpiry}</Text>
          </Flex>
        </Flex>

        <Flex
          position="absolute"
          width="100%"
          height="100%"
          backfaceVisibility="hidden"
          borderRadius="15px"
          p={4}
          bg={cardBg}
          direction="column"
          align="flex-end"
          justify="flex-end"
          bgGradient="linear(45deg, blue.400, blue.600)"
          transform="rotateY(180deg)"
          boxShadow={{md: "lg", base: 'md'}}
        >
          <Box width="100%" height="40px" bg={cardCvvBg} my={4} />
          <Text>CVV: {cvv.padEnd(3, "•")}</Text>
        </Flex>
      </Box>
    </Box>
  );
}

export function CreditCardForm({ totalPrice, onSubmit }: CreditCardFormProps) {
  const [cardFlipped, setCardFlipped] = useState<boolean>(false);

  const form = useForm({
    defaultValues: {
      number: "",
      dateExpires: "",
      cvv: "",
    } as TCardForm,
    onSubmit: ({ value }) => onSubmit?.(value),
  });

  const handleValidateCardNumber = (cardNumber: string): boolean => {
    const cleanedNumber = cardNumber.replace(/\s+/g, "");

    if (!/^\d{13,19}$/.test(cleanedNumber)) {
      return false;
    }

    let sum = 0;
    let shouldDouble = false;

    for (let i = cleanedNumber.length - 1; i >= 0; i--) {
      let digit = parseInt(cleanedNumber.charAt(i), 10);

      if (shouldDouble) {
        digit *= 2;
        if (digit > 9) {
          digit -= 9;
        }
      }

      sum += digit;
      shouldDouble = !shouldDouble;
    }
    return sum % 10 === 0;
  };

  return (
    <CardContainer>
      <form.Subscribe selector={(state) => state.values}>
        {({ number, cvv, dateExpires }) => (
          <CreditCard
            number={number}
            cvv={cvv}
            dateExpires={dateExpires}
            isFlipped={cardFlipped}
          />
        )}
      </form.Subscribe>
      <Grid templateColumns="repeat(4, 1fr)" gap={5}>
        <GridItem colSpan={4} rowSpan={1}>
          <form.Field
            name="number"
            validators={{
              onChange: z
                .string()
                .min(1, "Обязательное поле.")
                .refine(
                  (value) => handleValidateCardNumber(value),
                  "Некорректный номер карты"
                ),
            }}
          >
            {({ state, handleChange, handleBlur }) => (
              <Field.Root invalid={!state.meta.isValid} required>
                <Field.Label>
                  Номер карты
                  <Field.RequiredIndicator />
                </Field.Label>
                <Input
                  placeholder="0000 0000 0000 0000"
                  borderRadius="10px"
                  value={state.value}
                  onChange={({ target }) => handleChange(target?.value)}
                  onBlur={handleBlur}
                  ref={withMask("9999 9999 9999 9999", { placeholder: "" })}
                />
                <Field.ErrorText>
                  {state.meta.errors[0]?.message}
                </Field.ErrorText>
              </Field.Root>
            )}
          </form.Field>
        </GridItem>
        <GridItem colSpan={2} rowSpan={1}>
          <form.Field
            name="dateExpires"
            validators={{
              onChange: z.any(),
            }}
          >
            {({ state, handleChange, handleBlur }) => (
              <Field.Root invalid={!state.meta.isValid} required>
                <Field.Label>
                  Срок истечения
                  <Field.RequiredIndicator />
                </Field.Label>

                <Input
                  placeholder="12/25"
                  borderRadius="10px"
                  value={state.value}
                  onChange={({ target }) => handleChange(target?.value)}
                  onBlur={handleBlur}
                  ref={withMask("99/99")}
                />
                <Field.ErrorText>
                  {state.meta.errors[0]?.message}
                </Field.ErrorText>
              </Field.Root>
            )}
          </form.Field>
        </GridItem>
        <GridItem colSpan={2} rowSpan={1}>
          <form.Field
            name="cvv"
            validators={{
              onChange: z
                .string()
                .min(1, "Обязательное поле.")
                .regex(/^\d{3,4}$/, "Некорректный CVV-код."),
            }}
          >
            {({ state, handleChange, handleBlur }) => (
              <Field.Root invalid={!state.meta.isValid} required>
                <Field.Label>
                  CVV
                  <Field.RequiredIndicator />
                </Field.Label>

                <Input
                  placeholder="123"
                  borderRadius="10px"
                  value={state.value}
                  onChange={({ target }) => handleChange(target?.value)}
                  onBlur={() => {
                    handleBlur();
                    setCardFlipped(false);
                  }}
                  onFocus={() => setCardFlipped(true)}
                />
                <Field.ErrorText>
                  {state.meta.errors[0]?.message}
                </Field.ErrorText>
              </Field.Root>
            )}
          </form.Field>
        </GridItem>

        <GridItem colSpan={{ base: 4, lg: 2 }} rowSpan={2} alignItems="end">
          <Button
            borderRadius="15px"
            gap="5px"
            width="100%"
            onClick={() => form.handleSubmit()}
          >
            Оплатить <strong>{Math.round(totalPrice / 100)} ₽</strong>
          </Button>
        </GridItem>
      </Grid>
    </CardContainer>
  );
}
